#------------------------------------------------------------------------------
# This nmake file is used when building the CREO -> BRL-CAD conversion plugin.
#
# To run it, start the command prompt associated with the Visual Studio used to
# compile CREO (make sure you have the 64 bit version if you are on a 64 bit
# machine) and cd to the directory containing this file.  Then run the command
#
# nmake -f creo-brl-nmake dll

# Locate the programs' primary directories
BRLCAD_ROOT_DIR = "C:/Program Files/BRLCAD 7.XX.X"
CREO_ROOT_DIR = "C:/Program Files/PTC/Creo XXX/MXXX/Common Files"


# Set include directories
BRLCAD_INCLUDE_DIR = $(BRLCAD_ROOT_DIR)/include/brlcad
CREO_PROTK_INCDIR = $(CREO_ROOT_DIR)/protoolkit/includes

CREO_PROTK_APPLS_INCDIR = $(CREO_ROOT_DIR)/protoolkit/protk_appls/includes

INCS = -I$(BRLCAD_INCLUDE_DIR) -I$(CREO_PROTK_INCDIR) -I$(CREO_PROTK_APPLS_INCDIR) 


# Compiler flags
CC = cl
MACHINE_DEFS = -DPRO_MACHINE=36 -DPRO_OS=4
CREO_DEFS = -DPRO_USE_VAR_ARGS -D_USING_V100_SDK71_
BRLCAD_DEFS = -DHAVE_CONFIG_H
CCFLAGS = -c -GS -fp:precise
CFLAGS = $(CCFLAGS) $(INCS) $(MACHINE_DEFS) $(CREO_DEFS) $(BRLCAD_DEFS)

# Libraries
BRLCAD_LIBS = $(BRLCAD_ROOT_DIR)/lib/libbu.lib $(BRLCAD_ROOT_DIR)/lib/libbn.lib
# Note - the EXE and DLL versions of CREO plugins need different libs
CREO_DLL_LIBS = $(CREO_ROOT_DIR)/protoolkit/x86e_win64/obj/protk_dll.lib
WIN_LIBS = libcmt.lib kernel32.lib user32.lib wsock32.lib advapi32.lib mpr.lib winspool.lib netapi32.lib psapi.lib gdi32.lib shell32.lib comdlg32.lib ole32.lib ws2_32.lib

# DLL target
dll: creo-brl.dll

creo-brl.dll : creo-brl.obj
	link /subsystem:console -out:creo-brl.dll /debug:none /machine:amd64 /dll @<<longline.list
creo-brl.obj $(CREO_DLL_LIBS) $(BRLCAD_LIBS) $(WIN_LIBS)
<<

	@echo "creo_brl.dll build done"
	del creo-brl.obj

creo-brl.obj: creo-brl.cpp
	$(CC) $(CFLAGS) creo-brl.cpp

clean:
	del creo-brl.dll
